#!/usr/bin/env python3import loggingimport osfrom your.psrfits import PsrfitsFilefrom your.pysigproc import SigprocFilelogging_format = '%(asctime)s - %(funcName)s -%(name)s - %(levelname)s - %(message)s'logging.basicConfig(level=logging.INFO, format=logging_format)class Your(PsrfitsFile, SigprocFile):    def __init__(self, file):        self.your_file = file        if isinstance(self.your_file, str):            ext = os.path.splitext(self.your_file)[1]            if ext == ".fits" or ext == ".sf":                PsrfitsFile.__init__(self, psrfitslist=[self.your_file])            elif ext == ".fil":                SigprocFile.__init__(self, fp=self.your_file)            else:                raise TypeError('Filetype not supported')        elif isinstance(self.your_file, list):            if len(self.your_file) == 1 and os.path.splitext(*self.your_file)[1] == ".fil":                for filterbank_file in self.your_file:                    SigprocFile.__init__(self, fp=filterbank_file)            else:                for f in self.your_file:                    ext = os.path.splitext(f)[1]                    if ext == ".fits" or ext == ".sf" or ext == ".fil":                        pass                    else:                        raise TypeError("Can only work with list of fits file or filterbanks")                self.your_file.sort()                PsrfitsFile.__init__(self, psrfitslist=self.your_file)    def __repr__(self):        if isinstance(self.your_file, list):            s = "\n".join(map(str, self.your_file))        else:            s = self.your_file        return f"Using Files:\n{s}"